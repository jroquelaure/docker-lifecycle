node() {
    stage 'Build docker image'
        deleteDir()
        git url: 'https://github.com/jroquelaure/docker-lifecycle.git', branch: 'master'
         def server = Artifactory.server(params.artifactoryInstance)
        params.artifactoryUserName
        def password = params.apiKey
        def authUrl = "$server.url/api/npm/auth"
        def bowerUrl = "$server.url/api/bower/bower-dev"
        def npmUrl = "$server.url/api/npm/npm-prod"
        
        def curlstr="curl -H 'X-JFrog-Art-Api:"+password+"' '$server.url"
        def jarverstr = curlstr+ "/api/search/latestVersion?g=com.jfrog&a=frogsws&repos=libs-release-local2'"
        
        sh jarverstr +' > docker-app/jar/version.txt'
        sh 'cat docker-app/jar/version.txt'
        env.JARVER=readFile('docker-app/jar/version.txt')
        
        sh "mkdir -p docker-app/ui"
        def jsverstr = curlstr + "/api/search/latestVersion?g=org.jfrog&a=frogsui&repos=npm-release-local'"
        sh jsverstr  +' > docker-app/ui/version.txt'
        sh 'cat docker-app/ui/version.txt'
        env.JSVER=readFile('docker-app/ui/version.txt')
        
        def downloadSpec = """{
            "files": [
            {
                "pattern": "libs-release-local2/com/jfrog/frogsws/$env.JARVER/frogsws-$env.JARVER*.jar",
                "target": "docker-app/jar/frogsws.jar",
                "flat":"true"
            },
             {
                "pattern": "npm-release-local/org/jfrog/frogsui/frogsui-$env.JSVER*.tgz",
                "target": "docker-app/ui/frogsui.tgz",
                "flat":"true"
            }
        ]
        }"""
       
       def buildInfo = server.download(downloadSpec)
        
        sh "tar -xvzf docker-app/ui/frogsui.tgz -C docker-app/ui/"
        sh "mv docker-app/ui/package docker-app/ui/frogsui"
            
        
        docker.build("$params.dockerDevRepo/docker-app:$buildInfo.number", "-f docker-app/Dockerfile ./docker-app/") 
       
    stage "Push built image"
        def artDocker= Artifactory.docker("$params.artifactoryUserName", "$params.apiKey")
        def dockerInfo = artDocker.push("$params.dockerDevRepo/docker-app:$buildInfo.number", 'docker-dev-local')
        buildInfo.append(dockerInfo)
        buildInfo.env.capture = true
        buildInfo.env.collect()
        server.publishBuildInfo(buildInfo)
    
    stage "Test image"    
        //TODO
    
    stage "Promote build"
        def promotionConfig = [
        // Mandatory parameters
        'buildName'          : buildInfo.name,
        'buildNumber'        : buildInfo.number,
        'targetRepo'         : 'docker-prod-local',

        // Optional parameters
        'comment'            : 'ready for prod',
        'sourceRepo'         : 'docker-dev-local',
        'status'             : 'Released',
        'includeDependencies': false,
        'copy'               : true
    ]
    
    // Promote build
    server.promote promotionConfig
    
    sh("""curl -H 'X-JFrog-Art-Api:$params.apiKey' $server.url/api/docker/docker-prod-local/v2/promote -H "Content-Type:application/json" -d '{"targetRepo" : "docker-prod-local", "dockerRepository" : "docker-app", "tag" : "$buildInfo.number", "targetTag" : "latest", "copy": true }' """)
    
}